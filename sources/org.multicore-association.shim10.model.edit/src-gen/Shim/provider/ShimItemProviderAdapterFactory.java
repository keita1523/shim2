/**
 */
package Shim.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ShimItemProviderAdapterFactory extends org.multicore_association.shim10.model.shim10.util.ShimAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ShimItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Accessor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessorItemProvider accessorItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Accessor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessorAdapter() {
		if (accessorItemProvider == null) {
			accessorItemProvider = new AccessorItemProvider(this);
		}

		return accessorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.AccessType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessTypeItemProvider accessTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.AccessType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessTypeAdapter() {
		if (accessTypeItemProvider == null) {
			accessTypeItemProvider = new AccessTypeItemProvider(this);
		}

		return accessTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.AccessTypeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessTypeSetItemProvider accessTypeSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.AccessTypeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessTypeSetAdapter() {
		if (accessTypeSetItemProvider == null) {
			accessTypeSetItemProvider = new AccessTypeSetItemProvider(this);
		}

		return accessTypeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.AddressSpace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpaceItemProvider addressSpaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.AddressSpace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressSpaceAdapter() {
		if (addressSpaceItemProvider == null) {
			addressSpaceItemProvider = new AddressSpaceItemProvider(this);
		}

		return addressSpaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.AddressSpaceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpaceSetItemProvider addressSpaceSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.AddressSpaceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressSpaceSetAdapter() {
		if (addressSpaceSetItemProvider == null) {
			addressSpaceSetItemProvider = new AddressSpaceSetItemProvider(this);
		}

		return addressSpaceSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Cache} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CacheItemProvider cacheItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Cache}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCacheAdapter() {
		if (cacheItemProvider == null) {
			cacheItemProvider = new CacheItemProvider(this);
		}

		return cacheItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.ClockFrequency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockFrequencyItemProvider clockFrequencyItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.ClockFrequency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClockFrequencyAdapter() {
		if (clockFrequencyItemProvider == null) {
			clockFrequencyItemProvider = new ClockFrequencyItemProvider(this);
		}

		return clockFrequencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.CommonInstructionSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommonInstructionSetItemProvider commonInstructionSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.CommonInstructionSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommonInstructionSetAdapter() {
		if (commonInstructionSetItemProvider == null) {
			commonInstructionSetItemProvider = new CommonInstructionSetItemProvider(this);
		}

		return commonInstructionSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.CommunicationSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationSetItemProvider communicationSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.CommunicationSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationSetAdapter() {
		if (communicationSetItemProvider == null) {
			communicationSetItemProvider = new CommunicationSetItemProvider(this);
		}

		return communicationSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.ComponentSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentSetItemProvider componentSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.ComponentSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentSetAdapter() {
		if (componentSetItemProvider == null) {
			componentSetItemProvider = new ComponentSetItemProvider(this);
		}

		return componentSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.ConnectionSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionSetItemProvider connectionSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.ConnectionSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionSetAdapter() {
		if (connectionSetItemProvider == null) {
			connectionSetItemProvider = new ConnectionSetItemProvider(this);
		}

		return connectionSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.EventCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventCommunicationItemProvider eventCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.EventCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventCommunicationAdapter() {
		if (eventCommunicationItemProvider == null) {
			eventCommunicationItemProvider = new EventCommunicationItemProvider(this);
		}

		return eventCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.FIFOCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FIFOCommunicationItemProvider fifoCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.FIFOCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFIFOCommunicationAdapter() {
		if (fifoCommunicationItemProvider == null) {
			fifoCommunicationItemProvider = new FIFOCommunicationItemProvider(this);
		}

		return fifoCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Instruction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionItemProvider instructionItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Instruction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionAdapter() {
		if (instructionItemProvider == null) {
			instructionItemProvider = new InstructionItemProvider(this);
		}

		return instructionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.InterruptCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterruptCommunicationItemProvider interruptCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.InterruptCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterruptCommunicationAdapter() {
		if (interruptCommunicationItemProvider == null) {
			interruptCommunicationItemProvider = new InterruptCommunicationItemProvider(this);
		}

		return interruptCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Latency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LatencyItemProvider latencyItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Latency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLatencyAdapter() {
		if (latencyItemProvider == null) {
			latencyItemProvider = new LatencyItemProvider(this);
		}

		return latencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.MasterComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterComponentItemProvider masterComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.MasterComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasterComponentAdapter() {
		if (masterComponentItemProvider == null) {
			masterComponentItemProvider = new MasterComponentItemProvider(this);
		}

		return masterComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.MasterSlaveBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterSlaveBindingItemProvider masterSlaveBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.MasterSlaveBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasterSlaveBindingAdapter() {
		if (masterSlaveBindingItemProvider == null) {
			masterSlaveBindingItemProvider = new MasterSlaveBindingItemProvider(this);
		}

		return masterSlaveBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.MasterSlaveBindingSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterSlaveBindingSetItemProvider masterSlaveBindingSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.MasterSlaveBindingSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasterSlaveBindingSetAdapter() {
		if (masterSlaveBindingSetItemProvider == null) {
			masterSlaveBindingSetItemProvider = new MasterSlaveBindingSetItemProvider(this);
		}

		return masterSlaveBindingSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.MemoryConsistencyModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryConsistencyModelItemProvider memoryConsistencyModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.MemoryConsistencyModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryConsistencyModelAdapter() {
		if (memoryConsistencyModelItemProvider == null) {
			memoryConsistencyModelItemProvider = new MemoryConsistencyModelItemProvider(this);
		}

		return memoryConsistencyModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Performance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PerformanceItemProvider performanceItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Performance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPerformanceAdapter() {
		if (performanceItemProvider == null) {
			performanceItemProvider = new PerformanceItemProvider(this);
		}

		return performanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.PerformanceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PerformanceSetItemProvider performanceSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.PerformanceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPerformanceSetAdapter() {
		if (performanceSetItemProvider == null) {
			performanceSetItemProvider = new PerformanceSetItemProvider(this);
		}

		return performanceSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.Pitch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PitchItemProvider pitchItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.Pitch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPitchAdapter() {
		if (pitchItemProvider == null) {
			pitchItemProvider = new PitchItemProvider(this);
		}

		return pitchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.SharedMemoryCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SharedMemoryCommunicationItemProvider sharedMemoryCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.SharedMemoryCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSharedMemoryCommunicationAdapter() {
		if (sharedMemoryCommunicationItemProvider == null) {
			sharedMemoryCommunicationItemProvider = new SharedMemoryCommunicationItemProvider(this);
		}

		return sharedMemoryCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.SharedRegisterCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SharedRegisterCommunicationItemProvider sharedRegisterCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.SharedRegisterCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSharedRegisterCommunicationAdapter() {
		if (sharedRegisterCommunicationItemProvider == null) {
			sharedRegisterCommunicationItemProvider = new SharedRegisterCommunicationItemProvider(this);
		}

		return sharedRegisterCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.SlaveComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SlaveComponentItemProvider slaveComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.SlaveComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSlaveComponentAdapter() {
		if (slaveComponentItemProvider == null) {
			slaveComponentItemProvider = new SlaveComponentItemProvider(this);
		}

		return slaveComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.SubSpace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubSpaceItemProvider subSpaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.SubSpace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubSpaceAdapter() {
		if (subSpaceItemProvider == null) {
			subSpaceItemProvider = new SubSpaceItemProvider(this);
		}

		return subSpaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim10.model.shim10.SystemConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemConfigurationItemProvider systemConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim10.model.shim10.SystemConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemConfigurationAdapter() {
		if (systemConfigurationItemProvider == null) {
			systemConfigurationItemProvider = new SystemConfigurationItemProvider(this);
		}

		return systemConfigurationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (accessorItemProvider != null) accessorItemProvider.dispose();
		if (accessTypeItemProvider != null) accessTypeItemProvider.dispose();
		if (accessTypeSetItemProvider != null) accessTypeSetItemProvider.dispose();
		if (addressSpaceItemProvider != null) addressSpaceItemProvider.dispose();
		if (addressSpaceSetItemProvider != null) addressSpaceSetItemProvider.dispose();
		if (cacheItemProvider != null) cacheItemProvider.dispose();
		if (clockFrequencyItemProvider != null) clockFrequencyItemProvider.dispose();
		if (commonInstructionSetItemProvider != null) commonInstructionSetItemProvider.dispose();
		if (communicationSetItemProvider != null) communicationSetItemProvider.dispose();
		if (componentSetItemProvider != null) componentSetItemProvider.dispose();
		if (connectionItemProvider != null) connectionItemProvider.dispose();
		if (connectionSetItemProvider != null) connectionSetItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (eventCommunicationItemProvider != null) eventCommunicationItemProvider.dispose();
		if (fifoCommunicationItemProvider != null) fifoCommunicationItemProvider.dispose();
		if (instructionItemProvider != null) instructionItemProvider.dispose();
		if (interruptCommunicationItemProvider != null) interruptCommunicationItemProvider.dispose();
		if (latencyItemProvider != null) latencyItemProvider.dispose();
		if (masterComponentItemProvider != null) masterComponentItemProvider.dispose();
		if (masterSlaveBindingItemProvider != null) masterSlaveBindingItemProvider.dispose();
		if (masterSlaveBindingSetItemProvider != null) masterSlaveBindingSetItemProvider.dispose();
		if (memoryConsistencyModelItemProvider != null) memoryConsistencyModelItemProvider.dispose();
		if (performanceItemProvider != null) performanceItemProvider.dispose();
		if (performanceSetItemProvider != null) performanceSetItemProvider.dispose();
		if (pitchItemProvider != null) pitchItemProvider.dispose();
		if (sharedMemoryCommunicationItemProvider != null) sharedMemoryCommunicationItemProvider.dispose();
		if (sharedRegisterCommunicationItemProvider != null) sharedRegisterCommunicationItemProvider.dispose();
		if (slaveComponentItemProvider != null) slaveComponentItemProvider.dispose();
		if (subSpaceItemProvider != null) subSpaceItemProvider.dispose();
		if (systemConfigurationItemProvider != null) systemConfigurationItemProvider.dispose();
	}

}
