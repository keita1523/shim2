/**
 */
package org.multicore_association.shim.model.shim.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.domain.EditingDomain;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.multicore_association.shim.model.shim.ShimPackage;

import org.multicore_association.shim.model.shim.util.ShimAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ShimItemProviderAdapterFactory extends ShimAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(
			ShimEditPlugin.INSTANCE, ShimPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ShimItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Accessor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessorItemProvider accessorItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Accessor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessorAdapter() {
		if (accessorItemProvider == null) {
			accessorItemProvider = new AccessorItemProvider(this);
		}

		return accessorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.AccessType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessTypeItemProvider accessTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.AccessType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessTypeAdapter() {
		if (accessTypeItemProvider == null) {
			accessTypeItemProvider = new AccessTypeItemProvider(this);
		}

		return accessTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.AccessTypeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessTypeSetItemProvider accessTypeSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.AccessTypeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessTypeSetAdapter() {
		if (accessTypeSetItemProvider == null) {
			accessTypeSetItemProvider = new AccessTypeSetItemProvider(this);
		}

		return accessTypeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.AddressSpace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpaceItemProvider addressSpaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.AddressSpace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressSpaceAdapter() {
		if (addressSpaceItemProvider == null) {
			addressSpaceItemProvider = new AddressSpaceItemProvider(this);
		}

		return addressSpaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.AddressSpaceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpaceSetItemProvider addressSpaceSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.AddressSpaceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressSpaceSetAdapter() {
		if (addressSpaceSetItemProvider == null) {
			addressSpaceSetItemProvider = new AddressSpaceSetItemProvider(this);
		}

		return addressSpaceSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Cache} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CacheItemProvider cacheItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Cache}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCacheAdapter() {
		if (cacheItemProvider == null) {
			cacheItemProvider = new CacheItemProvider(this);
		}

		return cacheItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.ClockFrequency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockFrequencyItemProvider clockFrequencyItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.ClockFrequency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClockFrequencyAdapter() {
		if (clockFrequencyItemProvider == null) {
			clockFrequencyItemProvider = new ClockFrequencyItemProvider(this);
		}

		return clockFrequencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.CommonInstructionSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommonInstructionSetItemProvider commonInstructionSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.CommonInstructionSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommonInstructionSetAdapter() {
		if (commonInstructionSetItemProvider == null) {
			commonInstructionSetItemProvider = new CommonInstructionSetItemProvider(this);
		}

		return commonInstructionSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.CommunicationSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationSetItemProvider communicationSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.CommunicationSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationSetAdapter() {
		if (communicationSetItemProvider == null) {
			communicationSetItemProvider = new CommunicationSetItemProvider(this);
		}

		return communicationSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.ComponentSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentSetItemProvider componentSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.ComponentSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentSetAdapter() {
		if (componentSetItemProvider == null) {
			componentSetItemProvider = new ComponentSetItemProvider(this);
		}

		return componentSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.ConnectionSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionSetItemProvider connectionSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.ConnectionSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionSetAdapter() {
		if (connectionSetItemProvider == null) {
			connectionSetItemProvider = new ConnectionSetItemProvider(this);
		}

		return connectionSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.ContentionGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContentionGroupItemProvider contentionGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.ContentionGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContentionGroupAdapter() {
		if (contentionGroupItemProvider == null) {
			contentionGroupItemProvider = new ContentionGroupItemProvider(this);
		}

		return contentionGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.ContentionGroupSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContentionGroupSetItemProvider contentionGroupSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.ContentionGroupSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContentionGroupSetAdapter() {
		if (contentionGroupSetItemProvider == null) {
			contentionGroupSetItemProvider = new ContentionGroupSetItemProvider(this);
		}

		return contentionGroupSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.CustomInstruction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomInstructionItemProvider customInstructionItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.CustomInstruction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomInstructionAdapter() {
		if (customInstructionItemProvider == null) {
			customInstructionItemProvider = new CustomInstructionItemProvider(this);
		}

		return customInstructionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.DataRate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataRateItemProvider dataRateItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.DataRate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataRateAdapter() {
		if (dataRateItemProvider == null) {
			dataRateItemProvider = new DataRateItemProvider(this);
		}

		return dataRateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.EventCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventCommunicationItemProvider eventCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.EventCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventCommunicationAdapter() {
		if (eventCommunicationItemProvider == null) {
			eventCommunicationItemProvider = new EventCommunicationItemProvider(this);
		}

		return eventCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.FIFOCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FIFOCommunicationItemProvider fifoCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.FIFOCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFIFOCommunicationAdapter() {
		if (fifoCommunicationItemProvider == null) {
			fifoCommunicationItemProvider = new FIFOCommunicationItemProvider(this);
		}

		return fifoCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.FrequencyDomain} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyDomainItemProvider frequencyDomainItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.FrequencyDomain}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyDomainAdapter() {
		if (frequencyDomainItemProvider == null) {
			frequencyDomainItemProvider = new FrequencyDomainItemProvider(this);
		}

		return frequencyDomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.FrequencyVoltageSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyVoltageSetItemProvider frequencyVoltageSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.FrequencyVoltageSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyVoltageSetAdapter() {
		if (frequencyVoltageSetItemProvider == null) {
			frequencyVoltageSetItemProvider = new FrequencyVoltageSetItemProvider(this);
		}

		return frequencyVoltageSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.FunctionalUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionalUnitItemProvider functionalUnitItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.FunctionalUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionalUnitAdapter() {
		if (functionalUnitItemProvider == null) {
			functionalUnitItemProvider = new FunctionalUnitItemProvider(this);
		}

		return functionalUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.FunctionalUnitSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionalUnitSetItemProvider functionalUnitSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.FunctionalUnitSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionalUnitSetAdapter() {
		if (functionalUnitSetItemProvider == null) {
			functionalUnitSetItemProvider = new FunctionalUnitSetItemProvider(this);
		}

		return functionalUnitSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.FunctionalUnitSetFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionalUnitSetFileItemProvider functionalUnitSetFileItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.FunctionalUnitSetFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionalUnitSetFileAdapter() {
		if (functionalUnitSetFileItemProvider == null) {
			functionalUnitSetFileItemProvider = new FunctionalUnitSetFileItemProvider(this);
		}

		return functionalUnitSetFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Instruction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionItemProvider instructionItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Instruction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionAdapter() {
		if (instructionItemProvider == null) {
			instructionItemProvider = new InstructionItemProvider(this);
		}

		return instructionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.InstructionInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionInputItemProvider instructionInputItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.InstructionInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionInputAdapter() {
		if (instructionInputItemProvider == null) {
			instructionInputItemProvider = new InstructionInputItemProvider(this);
		}

		return instructionInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.InstructionOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionOperationItemProvider instructionOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.InstructionOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionOperationAdapter() {
		if (instructionOperationItemProvider == null) {
			instructionOperationItemProvider = new InstructionOperationItemProvider(this);
		}

		return instructionOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.InstructionOutput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionOutputItemProvider instructionOutputItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.InstructionOutput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionOutputAdapter() {
		if (instructionOutputItemProvider == null) {
			instructionOutputItemProvider = new InstructionOutputItemProvider(this);
		}

		return instructionOutputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.InterruptCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterruptCommunicationItemProvider interruptCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.InterruptCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterruptCommunicationAdapter() {
		if (interruptCommunicationItemProvider == null) {
			interruptCommunicationItemProvider = new InterruptCommunicationItemProvider(this);
		}

		return interruptCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Latency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LatencyItemProvider latencyItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Latency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLatencyAdapter() {
		if (latencyItemProvider == null) {
			latencyItemProvider = new LatencyItemProvider(this);
		}

		return latencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.MasterComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterComponentItemProvider masterComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.MasterComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasterComponentAdapter() {
		if (masterComponentItemProvider == null) {
			masterComponentItemProvider = new MasterComponentItemProvider(this);
		}

		return masterComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.MasterSlaveBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterSlaveBindingItemProvider masterSlaveBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.MasterSlaveBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasterSlaveBindingAdapter() {
		if (masterSlaveBindingItemProvider == null) {
			masterSlaveBindingItemProvider = new MasterSlaveBindingItemProvider(this);
		}

		return masterSlaveBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.MasterSlaveBindingSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterSlaveBindingSetItemProvider masterSlaveBindingSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.MasterSlaveBindingSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMasterSlaveBindingSetAdapter() {
		if (masterSlaveBindingSetItemProvider == null) {
			masterSlaveBindingSetItemProvider = new MasterSlaveBindingSetItemProvider(this);
		}

		return masterSlaveBindingSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.MemoryConsistencyModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryConsistencyModelItemProvider memoryConsistencyModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.MemoryConsistencyModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryConsistencyModelAdapter() {
		if (memoryConsistencyModelItemProvider == null) {
			memoryConsistencyModelItemProvider = new MemoryConsistencyModelItemProvider(this);
		}

		return memoryConsistencyModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.OperatingPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperatingPointItemProvider operatingPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.OperatingPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperatingPointAdapter() {
		if (operatingPointItemProvider == null) {
			operatingPointItemProvider = new OperatingPointItemProvider(this);
		}

		return operatingPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.OperatingPointSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperatingPointSetItemProvider operatingPointSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.OperatingPointSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperatingPointSetAdapter() {
		if (operatingPointSetItemProvider == null) {
			operatingPointSetItemProvider = new OperatingPointSetItemProvider(this);
		}

		return operatingPointSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Performance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PerformanceItemProvider performanceItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Performance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPerformanceAdapter() {
		if (performanceItemProvider == null) {
			performanceItemProvider = new PerformanceItemProvider(this);
		}

		return performanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.PerformanceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PerformanceSetItemProvider performanceSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.PerformanceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPerformanceSetAdapter() {
		if (performanceSetItemProvider == null) {
			performanceSetItemProvider = new PerformanceSetItemProvider(this);
		}

		return performanceSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Pitch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PitchItemProvider pitchItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Pitch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPitchAdapter() {
		if (pitchItemProvider == null) {
			pitchItemProvider = new PitchItemProvider(this);
		}

		return pitchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.PowerConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PowerConfigurationItemProvider powerConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.PowerConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPowerConfigurationAdapter() {
		if (powerConfigurationItemProvider == null) {
			powerConfigurationItemProvider = new PowerConfigurationItemProvider(this);
		}

		return powerConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.PowerConsumption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PowerConsumptionItemProvider powerConsumptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.PowerConsumption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPowerConsumptionAdapter() {
		if (powerConsumptionItemProvider == null) {
			powerConsumptionItemProvider = new PowerConsumptionItemProvider(this);
		}

		return powerConsumptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.PowerConsumptionSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PowerConsumptionSetItemProvider powerConsumptionSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.PowerConsumptionSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPowerConsumptionSetAdapter() {
		if (powerConsumptionSetItemProvider == null) {
			powerConsumptionSetItemProvider = new PowerConsumptionSetItemProvider(this);
		}

		return powerConsumptionSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.SharedMemoryCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SharedMemoryCommunicationItemProvider sharedMemoryCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.SharedMemoryCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSharedMemoryCommunicationAdapter() {
		if (sharedMemoryCommunicationItemProvider == null) {
			sharedMemoryCommunicationItemProvider = new SharedMemoryCommunicationItemProvider(this);
		}

		return sharedMemoryCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.SharedRegisterCommunication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SharedRegisterCommunicationItemProvider sharedRegisterCommunicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.SharedRegisterCommunication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSharedRegisterCommunicationAdapter() {
		if (sharedRegisterCommunicationItemProvider == null) {
			sharedRegisterCommunicationItemProvider = new SharedRegisterCommunicationItemProvider(this);
		}

		return sharedRegisterCommunicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Shim} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShimItemProvider shimItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Shim}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShimAdapter() {
		if (shimItemProvider == null) {
			shimItemProvider = new ShimItemProvider(this);
		}

		return shimItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.SlaveComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SlaveComponentItemProvider slaveComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.SlaveComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSlaveComponentAdapter() {
		if (slaveComponentItemProvider == null) {
			slaveComponentItemProvider = new SlaveComponentItemProvider(this);
		}

		return slaveComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.SubSpace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubSpaceItemProvider subSpaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.SubSpace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubSpaceAdapter() {
		if (subSpaceItemProvider == null) {
			subSpaceItemProvider = new SubSpaceItemProvider(this);
		}

		return subSpaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.SystemConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemConfigurationItemProvider systemConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.SystemConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemConfigurationAdapter() {
		if (systemConfigurationItemProvider == null) {
			systemConfigurationItemProvider = new SystemConfigurationItemProvider(this);
		}

		return systemConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.Throughput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThroughputItemProvider throughputItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.Throughput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThroughputAdapter() {
		if (throughputItemProvider == null) {
			throughputItemProvider = new ThroughputItemProvider(this);
		}

		return throughputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.multicore_association.shim.model.shim.VoltageDomain} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VoltageDomainItemProvider voltageDomainItemProvider;

	/**
	 * This creates an adapter for a {@link org.multicore_association.shim.model.shim.VoltageDomain}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVoltageDomainAdapter() {
		if (voltageDomainItemProvider == null) {
			voltageDomainItemProvider = new VoltageDomainItemProvider(this);
		}

		return voltageDomainItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (accessorItemProvider != null)
			accessorItemProvider.dispose();
		if (accessTypeItemProvider != null)
			accessTypeItemProvider.dispose();
		if (accessTypeSetItemProvider != null)
			accessTypeSetItemProvider.dispose();
		if (addressSpaceItemProvider != null)
			addressSpaceItemProvider.dispose();
		if (addressSpaceSetItemProvider != null)
			addressSpaceSetItemProvider.dispose();
		if (cacheItemProvider != null)
			cacheItemProvider.dispose();
		if (clockFrequencyItemProvider != null)
			clockFrequencyItemProvider.dispose();
		if (commonInstructionSetItemProvider != null)
			commonInstructionSetItemProvider.dispose();
		if (communicationSetItemProvider != null)
			communicationSetItemProvider.dispose();
		if (componentSetItemProvider != null)
			componentSetItemProvider.dispose();
		if (connectionItemProvider != null)
			connectionItemProvider.dispose();
		if (connectionSetItemProvider != null)
			connectionSetItemProvider.dispose();
		if (contentionGroupItemProvider != null)
			contentionGroupItemProvider.dispose();
		if (contentionGroupSetItemProvider != null)
			contentionGroupSetItemProvider.dispose();
		if (customInstructionItemProvider != null)
			customInstructionItemProvider.dispose();
		if (dataRateItemProvider != null)
			dataRateItemProvider.dispose();
		if (documentRootItemProvider != null)
			documentRootItemProvider.dispose();
		if (eventCommunicationItemProvider != null)
			eventCommunicationItemProvider.dispose();
		if (fifoCommunicationItemProvider != null)
			fifoCommunicationItemProvider.dispose();
		if (frequencyDomainItemProvider != null)
			frequencyDomainItemProvider.dispose();
		if (frequencyVoltageSetItemProvider != null)
			frequencyVoltageSetItemProvider.dispose();
		if (functionalUnitItemProvider != null)
			functionalUnitItemProvider.dispose();
		if (functionalUnitSetItemProvider != null)
			functionalUnitSetItemProvider.dispose();
		if (functionalUnitSetFileItemProvider != null)
			functionalUnitSetFileItemProvider.dispose();
		if (instructionItemProvider != null)
			instructionItemProvider.dispose();
		if (instructionInputItemProvider != null)
			instructionInputItemProvider.dispose();
		if (instructionOperationItemProvider != null)
			instructionOperationItemProvider.dispose();
		if (instructionOutputItemProvider != null)
			instructionOutputItemProvider.dispose();
		if (interruptCommunicationItemProvider != null)
			interruptCommunicationItemProvider.dispose();
		if (latencyItemProvider != null)
			latencyItemProvider.dispose();
		if (masterComponentItemProvider != null)
			masterComponentItemProvider.dispose();
		if (masterSlaveBindingItemProvider != null)
			masterSlaveBindingItemProvider.dispose();
		if (masterSlaveBindingSetItemProvider != null)
			masterSlaveBindingSetItemProvider.dispose();
		if (memoryConsistencyModelItemProvider != null)
			memoryConsistencyModelItemProvider.dispose();
		if (operatingPointItemProvider != null)
			operatingPointItemProvider.dispose();
		if (operatingPointSetItemProvider != null)
			operatingPointSetItemProvider.dispose();
		if (performanceItemProvider != null)
			performanceItemProvider.dispose();
		if (performanceSetItemProvider != null)
			performanceSetItemProvider.dispose();
		if (pitchItemProvider != null)
			pitchItemProvider.dispose();
		if (powerConfigurationItemProvider != null)
			powerConfigurationItemProvider.dispose();
		if (powerConsumptionItemProvider != null)
			powerConsumptionItemProvider.dispose();
		if (powerConsumptionSetItemProvider != null)
			powerConsumptionSetItemProvider.dispose();
		if (sharedMemoryCommunicationItemProvider != null)
			sharedMemoryCommunicationItemProvider.dispose();
		if (sharedRegisterCommunicationItemProvider != null)
			sharedRegisterCommunicationItemProvider.dispose();
		if (shimItemProvider != null)
			shimItemProvider.dispose();
		if (slaveComponentItemProvider != null)
			slaveComponentItemProvider.dispose();
		if (subSpaceItemProvider != null)
			subSpaceItemProvider.dispose();
		if (systemConfigurationItemProvider != null)
			systemConfigurationItemProvider.dispose();
		if (throughputItemProvider != null)
			throughputItemProvider.dispose();
		if (voltageDomainItemProvider != null)
			voltageDomainItemProvider.dispose();
	}

}
